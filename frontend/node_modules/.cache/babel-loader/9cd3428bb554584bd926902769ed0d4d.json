{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  orderDeliver: orderDeliverReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/kirk/ecommerce/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productReviewCreateReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","orderDeliverReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","productReviewCreate","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderListMy","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,kBADF,EAEEC,qBAFF,EAGEC,oBAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,0BANF,QAOO,4BAPP;AAQA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,gBAAT,EACIC,mBADJ,EAEIC,kBAFJ,EAGIC,wBAHJ,EAIIC,eAJJ,EAKIC,iBALJ,EAMIC,iBANJ,QAOO,yBAPP;AAQA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,gBALF,EAMEC,mBANF,QAOO,0BAPP;AASA,MAAMC,OAAO,GAAGxB,eAAe,CAAC;AAC5ByB,EAAAA,WAAW,EAAErB,kBADe;AAE5BsB,EAAAA,cAAc,EAAErB,qBAFY;AAG5BsB,EAAAA,aAAa,EAAErB,oBAHa;AAI5BsB,EAAAA,aAAa,EAAErB,oBAJa;AAK5BsB,EAAAA,aAAa,EAAErB,oBALa;AAM5BsB,EAAAA,mBAAmB,EAAErB,0BANO;AAQ5BsB,EAAAA,IAAI,EAAErB,WARsB;AAS5BsB,EAAAA,SAAS,EAAErB,gBATiB;AAU5BsB,EAAAA,YAAY,EAAErB,mBAVc;AAW5BsB,EAAAA,WAAW,EAAErB,kBAXe;AAY5BsB,EAAAA,iBAAiB,EAAErB,wBAZS;AAa5BsB,EAAAA,QAAQ,EAAErB,eAbkB;AAc5BsB,EAAAA,UAAU,EAAErB,iBAdgB;AAe5BsB,EAAAA,UAAU,EAAErB,iBAfgB;AAiB5BsB,EAAAA,WAAW,EAAErB,kBAjBe;AAkB5BsB,EAAAA,YAAY,EAAErB,mBAlBc;AAmB5BsB,EAAAA,QAAQ,EAAErB,eAnBkB;AAoB5BsB,EAAAA,WAAW,EAAErB,kBApBe;AAqB5BsB,EAAAA,SAAS,EAAErB,gBArBiB;AAsB5BsB,EAAAA,YAAY,EAAErB;AAtBc,CAAD,CAA/B;AA0BA,MAAMsB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GACuB,EADpD;AAGA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GACuB,IADnD;AAGA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GACuB,EAD1D;AAGA,MAAMK,YAAY,GAAG;AACjBrB,EAAAA,IAAI,EAAC;AACDsB,IAAAA,SAAS,EAAER,oBADV;AAEDS,IAAAA,eAAe,EAAEH;AAFhB,GADY;AAKjBnB,EAAAA,SAAS,EAAC;AAAEuB,IAAAA,QAAQ,EAAEL;AAAZ;AALO,CAArB;AASA,MAAMM,UAAU,GAAG,CAACtD,KAAD,CAAnB;AAEA,MAAMuD,KAAK,GAAG1D,WAAW,CAACyB,OAAD,EAAU4B,YAAV,EACrBjD,mBAAmB,CAACF,eAAe,CAAC,GAAGuD,UAAJ,CAAhB,CADE,CAAzB;AAGA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userUpdateProfileReducer,\n    userListReducer,\n    userDeleteReducer,\n    userUpdateReducer,\n} from './reducers/userReducers'\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderListMyReducer,\n  orderListReducer,\n  orderDeliverReducer,\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    productDelete: productDeleteReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    productReviewCreate: productReviewCreateReducer,\n\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n    \n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderListMy: orderListMyReducer,\n    orderList: orderListReducer,\n    orderDeliver: orderDeliverReducer,\n})\n\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\n    JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\nconst initialState = {\n    cart:{\n        cartItems: cartItemsFromStorage, \n        shippingAddress: shippingAddressFromStorage,\n    },\n    userLogin:{ userInfo: userInfoFromStorage },\n\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState,\n    composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store "]},"metadata":{},"sourceType":"module"}