{"ast":null,"code":"import _slicedToArray from\"/Users/kirk/ecommerce/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../components/FormContainer';import CheckoutSteps from'../components/CheckoutSteps';import{saveShippingAddress}from'../actions/cartActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ShippingScreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;var dispatch=useDispatch();var _useState=useState(shippingAddress.address),_useState2=_slicedToArray(_useState,2),address=_useState2[0],setAddress=_useState2[1];var _useState3=useState(shippingAddress.city),_useState4=_slicedToArray(_useState3,2),city=_useState4[0],setCity=_useState4[1];var _useState5=useState(shippingAddress.postalCode),_useState6=_slicedToArray(_useState5,2),postalCode=_useState6[0],setPostalCode=_useState6[1];var _useState7=useState(shippingAddress.country),_useState8=_slicedToArray(_useState7,2),country=_useState8[0],setCountry=_useState8[1];var submitHandler=function submitHandler(e){e.preventDefault();dispatch(saveShippingAddress({address:address,city:city,postalCode:postalCode,country:country}));history.push('/payment');};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Shipping\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"address\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Address\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,type:\"text\",placeholder:\"Enter address\",value:address?address:'',onChange:function onChange(e){return setAddress(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"city\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"City\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,type:\"text\",placeholder:\"Enter city\",value:city?city:'',onChange:function onChange(e){return setCity(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"postalCode\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Postal Code\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,type:\"text\",placeholder:\"Enter postal code\",value:postalCode?postalCode:'',onChange:function onChange(e){return setPostalCode(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"country\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Country\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,type:\"text\",placeholder:\"Enter country\",value:country?country:'',onChange:function onChange(e){return setCountry(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Continue\"})]})]});}export default ShippingScreen;","map":{"version":3,"sources":["/Users/kirk/ecommerce/backend/frontend/src/screens/ShippingScreen.js"],"names":["React","useState","useEffect","Form","Button","useDispatch","useSelector","FormContainer","CheckoutSteps","saveShippingAddress","ShippingScreen","history","cart","state","shippingAddress","dispatch","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","submitHandler","e","preventDefault","push","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter city'\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter postal code'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter country'\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n"]},"metadata":{},"sourceType":"module"}