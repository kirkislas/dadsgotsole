{"ast":null,"code":"import _slicedToArray from\"/Users/kirk/ecommerce/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Form,Button,Col}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../components/FormContainer';import CheckoutSteps from'../components/CheckoutSteps';import{savePaymentMethod}from'../actions/cartActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PaymentScreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;var dispatch=useDispatch();var _useState=useState('PayPal'),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];if(!shippingAddress.address){history.push('/shipping');}var submitHandler=function submitHandler(e){e.preventDefault();dispatch(savePaymentMethod(paymentMethod));history.push('/placeorder');};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{as:\"legend\",children:\"Select Method\"}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"PayPal or Credit Card\",id:\"paypal\",name:\"paymentMethod\",checked:true,onChange:function onChange(e){return setPaymentMethod(e.target.value);}})})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Continue\"})]})]});}export default PaymentScreen;","map":{"version":3,"sources":["/Users/kirk/ecommerce/backend/frontend/src/screens/PaymentScreen.js"],"names":["React","useState","useEffect","Form","Button","Col","useDispatch","useSelector","FormContainer","CheckoutSteps","savePaymentMethod","PaymentScreen","history","cart","state","shippingAddress","dispatch","paymentMethod","setPaymentMethod","address","push","submitHandler","e","preventDefault","target","value"],"mappings":"6JAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,GAAvB,KAAkC,iBAAlC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,OAASC,iBAAT,KAAkC,wBAAlC,C,wFAEA,QAASC,CAAAA,aAAT,MAAkC,IAAVC,CAAAA,OAAU,MAAVA,OAAU,CAE9B,GAAMC,CAAAA,IAAI,CAAGN,WAAW,CAAC,SAAAO,KAAK,QAAIA,CAAAA,KAAK,CAACD,IAAV,EAAN,CAAxB,CAF8B,GAGtBE,CAAAA,eAHsB,CAGFF,IAHE,CAGtBE,eAHsB,CAK9B,GAAMC,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CAL8B,cAOYL,QAAQ,CAAC,QAAD,CAPpB,wCAOvBgB,aAPuB,eAORC,gBAPQ,eAS9B,GAAI,CAACH,eAAe,CAACI,OAArB,CAA6B,CACzBP,OAAO,CAACQ,IAAR,CAAa,WAAb,EACH,CAED,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAM,CACxBA,CAAC,CAACC,cAAF,GACAP,QAAQ,CAACN,iBAAiB,CAACO,aAAD,CAAlB,CAAR,CACAL,OAAO,CAACQ,IAAR,CAAa,aAAb,EACH,CAJD,CAMA,mBACI,MAAC,aAAD,yBACI,KAAC,aAAD,EAAe,KAAK,KAApB,CAAqB,KAAK,KAA1B,CAA2B,KAAK,KAAhC,EADJ,cAGI,MAAC,IAAD,EAAM,QAAQ,CAAEC,aAAhB,wBACI,MAAC,IAAD,CAAM,KAAN,yBACI,KAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,QAAf,2BADJ,cAEI,KAAC,GAAD,wBACI,KAAC,IAAD,CAAM,KAAN,EACI,IAAI,CAAC,OADT,CAEI,KAAK,CAAC,uBAFV,CAGI,EAAE,CAAC,QAHP,CAII,IAAI,CAAC,eAJT,CAKI,OAAO,KALX,CAMI,QAAQ,CAAE,kBAACC,CAAD,QAAOJ,CAAAA,gBAAgB,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV,CAAvB,EANd,EADJ,EAFJ,GADJ,cAiBI,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,SAA9B,sBAjBJ,GAHJ,GADJ,CA2BH,CAED,cAAed,CAAAA,aAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen({history}) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address){\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) =>{\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n"]},"metadata":{},"sourceType":"module"}